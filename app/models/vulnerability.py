from enum import Enum
from typing import List, Optional, Dict, Any
from datetime import datetime
from pydantic import BaseModel, Field


class ThreatLevel(str, Enum):
    """Vulnerability threat levels"""
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    INFO = "info"


class Vulnerability(BaseModel):
    """Represents a vulnerability from OSV.dev"""
    id: str = Field(..., description="Vulnerability ID (e.g., CVE-2023-1234)")
    summary: str = Field(..., description="Vulnerability summary")
    description: Optional[str] = Field(None, description="Detailed description")
    severity: Optional[str] = Field(None, description="Severity level")
    affected_packages: List[Dict[str, Any]] = Field(default_factory=list, description="Affected packages")
    references: List[Dict[str, str]] = Field(default_factory=list, description="Reference links")
    published: Optional[datetime] = Field(None, description="Publication date")
    modified: Optional[datetime] = Field(None, description="Last modified date")
    database_specific: Optional[Dict[str, Any]] = Field(None, description="Database-specific data")

    class Config:
        use_enum_values = True


class VulnerabilityReport(BaseModel):
    """Report for a vulnerability in a specific dependency"""
    vulnerability: Vulnerability = Field(..., description="The vulnerability details")
    dependency: str = Field(..., description="Affected dependency name")
    dependency_version: str = Field(..., description="Affected dependency version")
    is_real_threat: bool = Field(..., description="Whether this is a real threat in this context")
    threat_level: ThreatLevel = Field(..., description="Assessed threat level")
    impact_summary: str = Field(..., description="Summary of potential impact")
    recommendation: str = Field(..., description="Recommended action")
    evidence: Dict[str, Any] = Field(default_factory=dict, description="Evidence for the assessment")
    triage_confidence: float = Field(..., ge=0.0, le=1.0, description="Confidence in the triage result")

    class Config:
        use_enum_values = True
